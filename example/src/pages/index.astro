---
import AstroMarkdown from 'astro-markdown-render';
import Layout from '../layouts/Layout.astro';
import {getDocuments, getEntry} from 'content-structure'

const documents = await getDocuments({format:"markdown"})

const mainEntry = await getEntry({uid:"main"})

---

<Layout title="Astro Remark">
		<h1>Astro <span class="text-gradient">Markdown</span> Render</h1>
		<div class="link">
			<a href="https://github.com/MicroWebStacks/astro-markdown-render" target="_blank">open 'astro-markdown-render' project in github</a>
		</div>
		<div class="instructions">
			<p>Markdown for the modern Era. Render multiple interactive elements directly from Markdown</p>
		</div>
		<p>This is the rendering of the 'main' examples page</p>
		<div class="instructions">
			<AstroMarkdown node={mainEntry.tree} data={mainEntry.data} />
		</div>
		<p>Below are further unit test examples pages</p>
		<ul>
			{documents.map((entry)=>(
				<li>
					<a href={`/docs/${entry.uid}`}>{entry.title}</a>
				</li>
			))}
		</ul>
</Layout>

<style>
	.link{
		margin: 20px;
		width: 100%;
		text-align: center;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
</style>
