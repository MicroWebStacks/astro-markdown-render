---
import Heading from './Heading.astro';
import {toHast} from 'mdast-util-to-hast'
import {toHtml} from 'hast-util-to-html'
import {node_slug} from '../libs/utils'
export interface Props {
    node: Object;
}

const {node} = Astro.props;
const other_type = !["root","paragraph","text","heading"].includes(node.type)
---
{(node.type == "root") &&
    node.children.map((node)=>(
        <Astro.self node={node} />
    ))
}
{(node.type == "heading") &&
<Heading id={node_slug(node)} tag={`h${node.depth}`}>
    {node.children.map((node)=>(
        <Fragment set:html={toHtml(toHast(node))}></Fragment>
    ))}
</Heading>
}
{(node.type == "paragraph") &&
<p>
    {node.children.map((node)=>(
        <Astro.self node={node} />
    ))}
</p>
}
{(node.type == "text") &&
    node.value
}
{other_type &&
    <Fragment set:html={toHtml(toHast(node))}></Fragment>
}
